{"version":3,"sources":["components/Item.js","components/ShoppingList.js","data/items.js","components/App.js","index.js"],"names":["Item","name","category","useState","isInCart","setIsInCart","className","onClick","ShoppingList","items","selectedCategory","setSelectedCategory","itemsToDisplay","filter","item","onChange","event","target","value","map","id","App","isDarkMode","setIsDarkMode","itemData","ReactDOM","render","document","getElementById"],"mappings":"0MAuBeA,MArBf,YAAmC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAAY,EACAC,oBAAS,GADT,mBACzBC,EADyB,KACfC,EADe,KAOhC,OACE,qBAAIC,UAAWF,EAAW,UAAY,GAAtC,UACE,+BAAOH,IACP,sBAAMK,UAAU,WAAhB,SAA4BJ,IAC5B,yBACEI,UAAWF,EAAW,SAAW,MACjCG,QAVN,WACEF,GAAY,SAACD,GAAD,OAAeA,MAOzB,UAIGA,EAAW,cAAgB,SAJ9B,eCwBSI,MAlCf,YAAkC,IAAVC,EAAS,EAATA,MAAS,EACiBN,mBAAS,OAD1B,mBACxBO,EADwB,KACNC,EADM,KASzBC,EAAiBH,EAAMI,QAAO,SAACC,GACnC,MAAyB,QAArBJ,GAEGI,EAAKZ,WAAaQ,KAG3B,OACE,sBAAKJ,UAAU,eAAf,UACE,qBAAKA,UAAU,SAAf,SACE,yBAAQL,KAAK,SAASc,SAf5B,SAA8BC,GAE5BL,EAAoBK,EAAMC,OAAOC,QAa7B,UACE,wBAAQA,MAAM,MAAd,gCACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,0BAGJ,oBAAIZ,UAAU,QAAd,SACGM,EAAeO,KAAI,SAACL,GAAD,OAClB,cAAC,EAAD,CAAoBb,KAAMa,EAAKb,KAAMC,SAAUY,EAAKZ,UAAzCY,EAAKM,aCtBXX,EARD,CACZ,CAAEW,GAAI,EAAGnB,KAAM,SAAUC,SAAU,SACnC,CAAEkB,GAAI,EAAGnB,KAAM,cAAeC,SAAU,WACxC,CAAEkB,GAAI,EAAGnB,KAAM,UAAWC,SAAU,WACpC,CAAEkB,GAAI,EAAGnB,KAAM,gBAAiBC,SAAU,SAC1C,CAAEkB,GAAI,EAAGnB,KAAM,UAAWC,SAAU,YCmBvBmB,MAnBf,WAAgB,IAAD,EAEuBlB,oBAAS,GAFhC,mBAENmB,EAFM,KAEMC,EAFN,KAQb,OACE,sBAAKjB,UAAWgB,EAAY,WAAW,YAAvC,UACE,mCACE,0CACA,yBAAQf,QARd,WACEgB,GAAc,SAACD,GAAD,OAAiBA,MAO3B,UAAuCA,EAAa,OAAS,QAA7D,cAEF,cAAC,EAAD,CAAcb,MAAOe,Q,MCd3BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.14988569.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Item({ name, category }) {\n  const [isInCart, setIsInCart] = useState(false);\n\n  function handleAddToCartClick() {\n    setIsInCart((isInCart) => !isInCart);\n  }\n\n  return (\n    <li className={isInCart ? \"in-cart\" : \"\"}>\n      <span>{name}</span>\n      <span className=\"category\">{category}</span>\n      <button\n        className={isInCart ? \"remove\" : \"add\"}\n        onClick={handleAddToCartClick}\n      >\n        {isInCart ? \"Remove From\" : \"Add to\"} Cart\n      </button>\n    </li>\n  );\n}\n\nexport default Item;","import React, { useState } from \"react\";\nimport Item from \"./Item\";\n\nfunction ShoppingList({ items }) {\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n\n  function handleCategoryChange(event) {\n    // event.target.value will be the value selected by the user\n    setSelectedCategory(event.target.value);\n  }\n\n  // we want to filter the items to only display the ones based on the selected category\n  const itemsToDisplay = items.filter((item) => {\n    if (selectedCategory === \"All\") return true;\n\n    return item.category === selectedCategory;\n  });\n\n  return (\n    <div className=\"ShoppingList\">\n      <div className=\"Filter\">\n        <select name=\"filter\" onChange={handleCategoryChange}>\n          <option value=\"All\">Filter by category</option>\n          <option value=\"Produce\">Produce</option>\n          <option value=\"Dairy\">Dairy</option>\n          <option value=\"Dessert\">Dessert</option>\n        </select>\n      </div>\n      <ul className=\"Items\">\n        {itemsToDisplay.map((item) => (\n          <Item key={item.id} name={item.name} category={item.category} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ShoppingList;\n","const items = [\n  { id: 1, name: \"Yogurt\", category: \"Dairy\" },\n  { id: 2, name: \"Pomegranate\", category: \"Produce\" },\n  { id: 3, name: \"Lettuce\", category: \"Produce\" },\n  { id: 4, name: \"String Cheese\", category: \"Dairy\" },\n  { id: 5, name: \"Cookies\", category: \"Dessert\" },\n];\n\nexport default items;\n","import React from \"react\";\nimport ShoppingList from \"./ShoppingList\";\nimport itemData from \"../data/items\";\nimport { useState } from \"react\";\n\nfunction App() {\n \n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  function handleDarkModeClick() {\n    setIsDarkMode((isDarkMode) => !isDarkMode);\n  }\n  //const appClass = 'light'? 'App dark': 'App light'\n  return (\n    <div className={isDarkMode? 'App dark':'App light'}>\n      <header>\n        <h2>Shopster</h2>\n        <button onClick={handleDarkModeClick}>{isDarkMode ? \"Dark\" : \"Light\"} Mode</button>\n      </header>\n      <ShoppingList items={itemData} />\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}